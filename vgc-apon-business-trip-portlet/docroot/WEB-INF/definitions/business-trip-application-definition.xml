<?xml version="1.0"?>
<workflow-definition xmlns="urn:liferay.com:liferay-workflow_6.2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:liferay.com:liferay-workflow_6.2.0 http://www.liferay.com/dtd/liferay-workflow-definition_6_2_0.xsd">
	<name>Business Trip Application</name>
	<description>Business Trip Application Workflow</description>
	<version>1</version>
	<state>
		<name>created</name>
		<metadata><![CDATA[{"transitions":{"submit":{"bendpoints":[],"xy":[-25,5]},"ApplicationFgCondition":{"bendpoints":[],"xy":[61,48]},"review":{"bendpoints":[],"xy":[-17,5]}},"xy":[-30,301]}]]></metadata>
		<initial>true</initial>
        <transitions>
            <transition>
                <name>submit</name>
                <target>isNormalSubmit</target>
            </transition>
        </transitions>
	</state>
	<task>
		<name>update</name>
		<metadata><![CDATA[{"transitions":{"resubmitToCashAdvance":{"bendpoints":[],"xy":[-4,34]},"resubmit":{"bendpoints":[[218,77]],"xy":[86,7]}},"xy":[630,23]}]]></metadata>
		<actions>
			<action>
				<name>reject</name>
				<script>
					<![CDATA[Packages.com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil.updateStatus(Packages.com.liferay.portal.kernel.workflow.WorkflowConstants.toStatus("draft"), workflowContext);]]>
				</script>
				<script-language>javascript</script-language>
				<execution-type>onAssignment</execution-type>
			</action>
		</actions>
		<assignments>
			<user />
		</assignments>
        <transitions>
            <transition>
                <name>resubmit</name>
                <target>Supervisor</target>
            </transition>
        </transitions>
	</task>
	<task>
		<name>Supervisor</name>
		<metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[],"xy":[-20,5]},"reject":{"bendpoints":[[354,252]],"xy":[164,-72]},"PositionFgCondition":{"bendpoints":[]}},"xy":[180,286]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(101, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
			<action>
				<name>resubmit</name>
				<script>
					<![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
									import com.liferay.portal.kernel.workflow.WorkflowConstants;
									WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.toStatus("pending"), workflowContext);]]>
				</script>
				<script-language>groovy</script-language>
				<execution-type>onEntry</execution-type>
			</action>
        </actions>
		
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
                import com.liferay.portal.service.UserLocalServiceUtil;
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role supervisorRole = (Role) serviceContext.getAttribute("vgcapon_btApplication_supervisor");
				user = null;
				roles = new ArrayList<Role>();
				roles.add(supervisorRole);                  
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
		<transitions>
            <transition>
                <name>reject</name>
                <target>update</target>
            </transition>
            <transition>
                <name>approve</name>
                <target>IsCrossDepartment</target>
            </transition>
		</transitions>
	</task>
	<task>
        <name>Accounting</name>
		<metadata><![CDATA[{"transitions":{"refuse":{"bendpoints":[[1069,249],[1185,248]],"xy":[-18,11]},"approve":{"bendpoints":[],"xy":[-19,5]},"reject":{"bendpoints":[[1153,211],[889,211]],"xy":[-4,-19]}},"xy":[1210,283]}]]></metadata>
		<actions>			
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(106, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
		</actions>
		<assignments>
            <scripted-assignment>
                <script><![CDATA[                	
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role[] accountingRoles = (Role[]) serviceContext.getAttribute("vgcapon_btApplication_accounting");
				roles = new ArrayList<Role>();
				for(Role role:accountingRoles) {
					roles.add(role);
				}
				user = null;]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>approve</name>
                <target>approved</target>
            </transition>
            <transition>
                <name>reject</name>
                <target>applicant</target>
            </transition>
        </transitions>
	</task>
    <task>
        <name>EVP</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[],"xy":[-20,3]},"reject":{"bendpoints":[]}},"xy":[630,286]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(103, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
                import com.liferay.portal.service.UserLocalServiceUtil;
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role evpRole = (Role) serviceContext.getAttribute("vgcapon_btApplication_evp");
				user = null;
				roles = new ArrayList<Role>();
				roles.add(evpRole);                  
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>reject</name>
                <target>update</target>
            </transition>
            <transition>
                <name>approve</name>
                <target>applicant</target>
            </transition>
        </transitions>
    </task>
    <task>
        <name>DepartmentLead</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[],"xy":[-20,5]},"reject":{"bendpoints":[]}},"xy":[410,286]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(102, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
                import com.liferay.portal.service.UserLocalServiceUtil;
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role departmentLeadRole = (Role) serviceContext.getAttribute("vgcapon_btApplication_departmentLead");
				user = null;
				roles = new ArrayList<Role>();
				roles.add(departmentLeadRole);                  
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>reject</name>
                <target>update</target>
            </transition>
            <transition>
                <name>approve</name>
                <target>isNeedEVPApprove</target>
            </transition>
            <transition>
                <name>approve</name>
                <target>isNeedEVPApprove</target>
            </transition>
        </transitions>
    </task>
    <task>
        <name>HeadControlling</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[],"xy":[-20,5]},"approved":{"bendpoints":[],"xy":[-24,5]},"reject":{"bendpoints":[[1051,254],[901,256]],"xy":[12,-4]}},"xy":[1090,283]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(105, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[                	
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role[] headControllingRoles = (Role[]) serviceContext.getAttribute("vgcapon_btApplication_headControlling");
				roles = new ArrayList<Role>();
				for(Role role:headControllingRoles) {
					roles.add(role);
				}
				user = null;]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>approve</name>
                <target>Accounting</target>
            </transition>
            <transition>
                <name>reject</name>
                <target>applicant</target>
            </transition>
        </transitions>
    </task>
    <state>
        <name>approved</name>
        <metadata><![CDATA[{"terminal":true,"xy":[1340,298]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.STATUS_APPROVED, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
    </state>
    <condition>
        <name>IsCrossDepartment</name>
        <metadata><![CDATA[{"transitions":{"Division EVP":{"bendpoints":[]},"Organization":{"bendpoints":[]},"Yes":{"bendpoints":[],"xy":[-18,5]},"No":{"bendpoints":[[348,446],[545,447]],"xy":[-11,7]}},"xy":[300,289]}]]></metadata>
       
        <script><![CDATA[import com.liferay.portal.kernel.util.GetterUtil;
			import com.liferay.portal.kernel.workflow.WorkflowConstants;
			import com.liferay.portal.service.ServiceContext;
			
			ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
			
			String isCrossDepartment = (String) serviceContext.getAttribute("vgcapon_btApplication_isCrossDepartment");
			
			if (isCrossDepartment.contains("No")) {
				returnValue = "No";
			}else {
				returnValue = "Yes";
			}]]></script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <name>No</name>
                <target>isNeedEVPApprove</target>
            </transition>
            <transition>
                <name>Yes</name>
                <target>DepartmentLead</target>
            </transition>
        </transitions>
    </condition>
    <condition>
        <name>isNeedEVPApprove</name>
        <metadata><![CDATA[{"transitions":{"Yes":{"bendpoints":[],"xy":[-13,5]},"No":{"bendpoints":[[597,442],[729,443],[765,443]],"xy":[-59,7]}},"xy":[530,289]}]]></metadata>
        <script><![CDATA[import com.liferay.portal.kernel.util.GetterUtil;
			import com.liferay.portal.kernel.workflow.WorkflowConstants;
			import com.liferay.portal.service.ServiceContext;
			
			ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
			
			String isNeedEVPApprove = (String) serviceContext.getAttribute("vgcapon_btApplication_isNeedEVPApprove");
			
			if (isNeedEVPApprove.contains("No")) {
				returnValue = "No";
			}else {
				returnValue = "Yes";
			}]]></script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <name>Yes</name>
                <target>EVP</target>
            </transition>
            <transition>
                <name>No</name>
                <target>applicant</target>
            </transition>
        </transitions>
    </condition>
    <condition>
        <name>IsNeedCashAdvance</name>
        <metadata><![CDATA[{"transitions":{"Yes":{"bendpoints":[],"xy":[-18,4]},"No":{"bendpoints":[[917,505],[1366,504]]}},"xy":[880,286]}]]></metadata>
        <script><![CDATA[import com.liferay.portal.kernel.util.GetterUtil;
			import com.liferay.portal.kernel.workflow.WorkflowConstants;
			import com.liferay.portal.service.ServiceContext;
			
			ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
			
			String isNeedCashAdvance = (String) serviceContext.getAttribute("vgcapon_btApplication_isNeedCashAdvance");
			
			if (isNeedCashAdvance.contains("No")) {
				returnValue = "No";
			}else {
				returnValue = "Yes";
			}]]></script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <name>Yes</name>
                <target>IsOverCashAdvance</target>
            </transition>
            <transition>
                <name>No</name>
                <target>approved</target>
            </transition>
        </transitions>
    </condition>
    <condition>
        <name>IsOverCashAdvance</name>
        <metadata><![CDATA[{"transitions":{"Yes":{"bendpoints":[],"xy":[-13,5]},"No":{"bendpoints":[[1029,443],[1133,444],[1256,442]]}},"xy":[990,286]}]]></metadata>
        <script><![CDATA[import com.liferay.portal.kernel.util.GetterUtil;
			import com.liferay.portal.kernel.workflow.WorkflowConstants;
			import com.liferay.portal.service.ServiceContext;
			
			ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
			
			String isOverCashAdvance = (String) serviceContext.getAttribute("vgcapon_btApplication_isOverCashAdvance");
			
			if (isOverCashAdvance.contains("No")) {
				returnValue = "No";
			}else {
				returnValue = "Yes";
			}]]></script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <name>No</name>
                <target>Accounting</target>
            </transition>
            <transition>
                <name>Yes</name>
                <target>HeadControlling</target>
            </transition>
        </transitions>
    </condition>
    <condition>
        <name>isNormalSubmit</name>
        <metadata><![CDATA[{"transitions":{"Yes":{"bendpoints":[]},"No":{"bendpoints":[[205,502],[806,501]],"xy":[25,-22]}},"xy":[60,289]}]]></metadata>
        <script><![CDATA[import com.liferay.portal.kernel.util.GetterUtil;
			import com.liferay.portal.kernel.workflow.WorkflowConstants;
			import com.liferay.portal.service.ServiceContext;
			
			ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
			
			String isNormalSubmit = (String) serviceContext.getAttribute("vgcapon_btApplication_isNormalSubmit");
			
			if (isNormalSubmit.contains("No")) {
				returnValue = "No";
			}else {
				returnValue = "Yes";
			}]]></script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <name>Yes</name>
                <target>Supervisor</target>
            </transition>
            <transition>
                <name>No</name>
                <target>IsNeedCashAdvance</target>
            </transition>
        </transitions>
    </condition>
    <task>
        <name>applicant</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[],"xy":[-25,5]}},"xy":[750,283]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(104, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
            <action>
				<name>reject</name>
				<script>
					<![CDATA[Packages.com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil.updateStatus(104, workflowContext);]]>
				</script>
				<script-language>javascript</script-language>
				<execution-type>onEntry</execution-type>
			</action>
        </actions>
        <assignments>
            <user></user>
        </assignments>
        <transitions>
            <transition>
                <name>approve</name>
                <target>IsNeedCashAdvance</target>
            </transition>
        </transitions>
    </task>
</workflow-definition>
