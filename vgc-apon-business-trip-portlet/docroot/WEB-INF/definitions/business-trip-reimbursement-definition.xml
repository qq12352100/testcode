<?xml version="1.0" encoding="UTF-8"?>
<workflow-definition xmlns="urn:liferay.com:liferay-workflow_6.2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:liferay.com:liferay-workflow_6.2.0 http://www.liferay.com/dtd/liferay-workflow-definition_6_2_0.xsd">
    <name>Business Trip Reimbursement</name>
    <description>Business Trip Reimbursement Workflow</description>
    <version>1</version>
    <state>
        <name>created</name>
        <metadata><![CDATA[{"transitions":{"submit":{"bendpoints":[],"xy":[-9,-12]},"Supervisor":{"bendpoints":[]},"review":{"bendpoints":[]}},"xy":[50,291]}]]></metadata>
        <initial>true</initial>
        <transitions>
            <transition>
                <name>submit</name>
                <target>isNormalSubmit</target>
            </transition>
        </transitions>
    </state>
    <task>
        <name>Supervisor</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[],"xy":[-25,3]},"approved":{"bendpoints":[]},"reject":{"bendpoints":[],"xy":[-7,11]},"IsInternationalTrip":{"bendpoints":[]}},"xy":[330,276]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(101, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
                import com.liferay.portal.service.UserLocalServiceUtil;
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role supervisorRole = (Role) serviceContext.getAttribute("vgcapon_btReimbursement_supervisor");
				user = null;
				roles = new ArrayList<Role>();
				roles.add(supervisorRole);                  
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>approve</name>
                <target>IsInternationalTrip</target>
            </transition>
            <transition>
                <name>reject</name>
                <target>update</target>
                <default>true</default>
            </transition>
        </transitions>
    </task>
    <condition>
        <name>IsInternationalTrip</name>
        <metadata><![CDATA[{"transitions":{"yes":{"bendpoints":[],"xy":[-12,3]},"DivisionManager":{"bendpoints":[]},"yes]":{"bendpoints":[]},"no":{"bendpoints":[]},"IsEnterDuringTrip":{"bendpoints":[]},"Yes":{"bendpoints":[],"xy":[-7,1]},"No":{"bendpoints":[[484,435],[738,434]],"xy":[-10,3]},"Division Manager":{"bendpoints":[]},"EVP":{"bendpoints":[]}},"xy":[450,276]}]]></metadata>
        <script><![CDATA[import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.service.ServiceContext;

ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);

String IsInternationalTrip = (String) serviceContext.getAttribute("vgcapon_btReimbursement_IsInternationalTrip");

if (IsInternationalTrip.contains("No")) {
	returnValue = "No";
}else {
	returnValue = "Yes";
}]]></script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <name>No</name>
                <target>IsEnterDuringTrip</target>
            </transition>
            <transition>
                <name>Yes</name>
                <target>EVP</target>
            </transition>
        </transitions>
    </condition>
    <task>
        <name>EVP</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[],"xy":[-24,3]},"reject":{"bendpoints":[]},"IsEnterDuringTrip":{"bendpoints":[]}},"xy":[560,276]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(102, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
                import com.liferay.portal.service.UserLocalServiceUtil;
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role evpRole = (Role) serviceContext.getAttribute("vgcapon_btReimbursement_evp");
				user = null;
				roles = new ArrayList<Role>();
				roles.add(evpRole);                  
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>approve</name>
                <target>IsEnterDuringTrip</target>
            </transition>
            <transition>
                <name>reject</name>
                <target>update</target>
            </transition>
        </transitions>
    </task>
    <condition>
        <name>IsEnterDuringTrip</name>
        <metadata><![CDATA[{"transitions":{"IsEnterFee":{"bendpoints":[]},"HRG":{"bendpoints":[]},"Yes":{"bendpoints":[],"xy":[-7,2]},"No":{"bendpoints":[[764,456],[1088,457]],"xy":[38,4]}},"xy":[700,276]}]]></metadata>
        <script><![CDATA[import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.service.ServiceContext;

ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);

String IsEnterDuringTrip = (String) serviceContext.getAttribute("vgcapon_btReimbursement_IsEnterDuringTrip");

if (IsEnterDuringTrip.contains("No")) {
	returnValue = "No";
}else {
	returnValue = "Yes";
}]]></script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <name>Yes</name>
                <target>IsEnterFee</target>
            </transition>
            <transition>
                <name>No</name>
                <target>HRG</target>
            </transition>
        </transitions>
    </condition>
    <condition>
        <name>IsEnterFee</name>
        <metadata><![CDATA[{"transitions":{"Head of Controlling":{"bendpoints":[]},"Yes":{"bendpoints":[[844,426],[1069,427]],"xy":[-16,4]},"HRG":{"bendpoints":[]},"No":{"bendpoints":[],"xy":[-12,-1]}},"xy":[810,276]}]]></metadata>
        <script><![CDATA[import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.service.ServiceContext;

ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);

String IsEnterFee = (String) serviceContext.getAttribute("vgcapon_btReimbursement_IsEnterFee");

if (IsEnterFee.contains("No")) {
	returnValue = "No";
}else {
	returnValue = "Yes";
}]]></script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <name>Yes</name>
                <target>HRG</target>
            </transition>
            <transition>
                <name>No</name>
                <target>Head of Controlling</target>
            </transition>
        </transitions>
    </condition>
    <task>
        <name>Head of Controlling</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[],"xy":[-25,-1]},"reject":{"bendpoints":[],"xy":[-56,-52]}},"xy":[920,276]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(103, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
			import com.liferay.portal.kernel.util.GetterUtil;
			import com.liferay.portal.kernel.workflow.WorkflowConstants;
			import com.liferay.portal.service.ServiceContext;
			import com.liferay.portal.service.RoleLocalServiceUtil;
			import com.liferay.portal.model.Role;

			long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
			ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
			Role[] headControllingRoles = (Role[]) serviceContext.getAttribute("vgcapon_btReimbursement_headOfControlling");
			roles = new ArrayList<Role>();
			for(Role role:headControllingRoles) {
				roles.add(role);
			}
			user = null;              
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>approve</name>
                <target>HRG</target>
            </transition>
            <transition>
                <name>reject</name>
                <target>update</target>
            </transition>
        </transitions>
    </task>
    <task>
        <name>HRG</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[],"xy":[-25,-1]},"approved":{"bendpoints":[]},"reject":{"bendpoints":[],"xy":[-59,-42]}},"xy":[1060,276]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(104, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
		import com.liferay.portal.kernel.util.GetterUtil;
		import com.liferay.portal.kernel.workflow.WorkflowConstants;
		import com.liferay.portal.service.ServiceContext;
		import com.liferay.portal.service.RoleLocalServiceUtil;
		import com.liferay.portal.model.Role;

		long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
		ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
		Role[] hrgRoles = (Role[]) serviceContext.getAttribute("vgcapon_btReimbursement_hrg");
		roles = new ArrayList<Role>();
		for(Role role:hrgRoles) {
			roles.add(role);
		}
		user = null;          
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>approve</name>
                <target>approved</target>
                <default>true</default>
            </transition>
            <transition>
                <name>reject</name>
                <target>update</target>
            </transition>
        </transitions>
    </task>
    <state>
        <name>approved</name>
        <metadata><![CDATA[{"terminal":true,"xy":[1200,291]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil
					import com.liferay.portal.kernel.workflow.WorkflowConstants
					
					WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.STATUS_APPROVED, workflowContext)
					]]></script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
    </state>
    <task>
        <name>update</name>
        <metadata><![CDATA[{"transitions":{"resubmitToHRG":{"bendpoints":[],"xy":[-138,4]},"Supervisor":{"bendpoints":[[205,159]]},"HRG":{"bendpoints":[[783,253]]},"resubmit":{"bendpoints":[[367,83]],"xy":[98,1]}},"xy":[560,30]}]]></metadata>
        <actions>
            <action>
                <name>reject</name>
                <script><![CDATA[
					Packages.com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil.updateStatus(Packages.com.liferay.portal.kernel.workflow.WorkflowConstants.toStatus("draft"), workflowContext);
				]]></script>
                <script-language>javascript</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
                	import com.liferay.portal.kernel.util.GetterUtil;
					import com.liferay.portal.kernel.workflow.WorkflowConstants;
					import com.liferay.portal.service.ServiceContext;
					import com.liferay.portal.service.RoleLocalServiceUtil;
					import com.liferay.portal.model.Role;
					import com.liferay.portal.service.UserLocalServiceUtil;
					import com.liferay.portal.model.User;
			
					long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
					ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
					
					long userId = (Long) serviceContext.getAttribute("vgcapon_btReimbursement_isNormalSubmitUserId");
					User submitUser = UserLocalServiceUtil.fetchUserById(userId);
					roles = new ArrayList<Role>();
					user = submitUser; 
                ]]></script>
                
                
                
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>resubmit</name>
                <target>Supervisor</target>
                <default>true</default>
            </transition>
            <transition>
                <name>resubmitToHRG</name>
                <target>HRG</target>
            </transition>
        </transitions>
    </task>
    <condition>
        <name>isNormalSubmit</name>
        <metadata><![CDATA[{"transitions":{"resubmitToHRG":{"bendpoints":[[219,490],[612,493],[1107,494]]},"Yes":{"bendpoints":[]},"No":{"bendpoints":[[219,490],[612,493],[1097,491]],"xy":[-73,-14]}},"xy":[180,279]}]]></metadata>
        <script><![CDATA[import com.liferay.portal.kernel.util.GetterUtil;
			import com.liferay.portal.kernel.workflow.WorkflowConstants;
			import com.liferay.portal.service.ServiceContext;
			
			ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
			
			String isNormalSubmit = (String) serviceContext.getAttribute("vgcapon_btReimbursement_isNormalSubmit");
			
			if (isNormalSubmit.contains("No")) {
				returnValue = "No";
			}else {
				returnValue = "Yes";
			}]]></script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <name>Yes</name>
                <target>Supervisor</target>
            </transition>
            <transition>
                <name>No</name>
                <target>HRG</target>
            </transition>
        </transitions>
    </condition>
</workflow-definition>