/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.business.trip.model.impl;

import com.business.trip.model.BtFlightTrainInfo;
import com.business.trip.model.BtFlightTrainInfoModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the BtFlightTrainInfo service. Represents a row in the &quot;vgcapon_BtFlightTrainInfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.business.trip.model.BtFlightTrainInfoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BtFlightTrainInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see BtFlightTrainInfoImpl
 * @see com.business.trip.model.BtFlightTrainInfo
 * @see com.business.trip.model.BtFlightTrainInfoModel
 * @generated
 */
public class BtFlightTrainInfoModelImpl extends BaseModelImpl<BtFlightTrainInfo>
	implements BtFlightTrainInfoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a bt flight train info model instance should use the {@link com.business.trip.model.BtFlightTrainInfo} interface instead.
	 */
	public static final String TABLE_NAME = "vgcapon_BtFlightTrainInfo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "btFlightTrainInfoId", Types.BIGINT },
			{ "businessTripPkId", Types.BIGINT },
			{ "ticketNo", Types.VARCHAR },
			{ "type_", Types.VARCHAR },
			{ "fromCity", Types.VARCHAR },
			{ "toCity", Types.VARCHAR },
			{ "departureDate", Types.TIMESTAMP },
			{ "departureFlight", Types.VARCHAR },
			{ "departureTime", Types.TIMESTAMP },
			{ "classInfo", Types.VARCHAR },
			{ "price", Types.DOUBLE },
			{ "currency_", Types.VARCHAR },
			{ "tripType", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table vgcapon_BtFlightTrainInfo (btFlightTrainInfoId LONG not null primary key,businessTripPkId LONG,ticketNo VARCHAR(75) null,type_ VARCHAR(75) null,fromCity VARCHAR(75) null,toCity VARCHAR(75) null,departureDate DATE null,departureFlight VARCHAR(75) null,departureTime DATE null,classInfo VARCHAR(75) null,price DOUBLE,currency_ VARCHAR(75) null,tripType VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table vgcapon_BtFlightTrainInfo";
	public static final String ORDER_BY_JPQL = " ORDER BY btFlightTrainInfo.btFlightTrainInfoId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY vgcapon_BtFlightTrainInfo.btFlightTrainInfoId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.business.trip.model.BtFlightTrainInfo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.business.trip.model.BtFlightTrainInfo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.business.trip.model.BtFlightTrainInfo"),
			true);
	public static long BUSINESSTRIPPKID_COLUMN_BITMASK = 1L;
	public static long TICKETNO_COLUMN_BITMASK = 2L;
	public static long TRIPTYPE_COLUMN_BITMASK = 4L;
	public static long BTFLIGHTTRAININFOID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.business.trip.model.BtFlightTrainInfo"));

	public BtFlightTrainInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _btFlightTrainInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBtFlightTrainInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _btFlightTrainInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BtFlightTrainInfo.class;
	}

	@Override
	public String getModelClassName() {
		return BtFlightTrainInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("btFlightTrainInfoId", getBtFlightTrainInfoId());
		attributes.put("businessTripPkId", getBusinessTripPkId());
		attributes.put("ticketNo", getTicketNo());
		attributes.put("type", getType());
		attributes.put("fromCity", getFromCity());
		attributes.put("toCity", getToCity());
		attributes.put("departureDate", getDepartureDate());
		attributes.put("departureFlight", getDepartureFlight());
		attributes.put("departureTime", getDepartureTime());
		attributes.put("classInfo", getClassInfo());
		attributes.put("price", getPrice());
		attributes.put("currency", getCurrency());
		attributes.put("tripType", getTripType());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long btFlightTrainInfoId = (Long)attributes.get("btFlightTrainInfoId");

		if (btFlightTrainInfoId != null) {
			setBtFlightTrainInfoId(btFlightTrainInfoId);
		}

		Long businessTripPkId = (Long)attributes.get("businessTripPkId");

		if (businessTripPkId != null) {
			setBusinessTripPkId(businessTripPkId);
		}

		String ticketNo = (String)attributes.get("ticketNo");

		if (ticketNo != null) {
			setTicketNo(ticketNo);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		String fromCity = (String)attributes.get("fromCity");

		if (fromCity != null) {
			setFromCity(fromCity);
		}

		String toCity = (String)attributes.get("toCity");

		if (toCity != null) {
			setToCity(toCity);
		}

		Date departureDate = (Date)attributes.get("departureDate");

		if (departureDate != null) {
			setDepartureDate(departureDate);
		}

		String departureFlight = (String)attributes.get("departureFlight");

		if (departureFlight != null) {
			setDepartureFlight(departureFlight);
		}

		Date departureTime = (Date)attributes.get("departureTime");

		if (departureTime != null) {
			setDepartureTime(departureTime);
		}

		String classInfo = (String)attributes.get("classInfo");

		if (classInfo != null) {
			setClassInfo(classInfo);
		}

		Double price = (Double)attributes.get("price");

		if (price != null) {
			setPrice(price);
		}

		String currency = (String)attributes.get("currency");

		if (currency != null) {
			setCurrency(currency);
		}

		String tripType = (String)attributes.get("tripType");

		if (tripType != null) {
			setTripType(tripType);
		}
	}

	@Override
	public long getBtFlightTrainInfoId() {
		return _btFlightTrainInfoId;
	}

	@Override
	public void setBtFlightTrainInfoId(long btFlightTrainInfoId) {
		_btFlightTrainInfoId = btFlightTrainInfoId;
	}

	@Override
	public long getBusinessTripPkId() {
		return _businessTripPkId;
	}

	@Override
	public void setBusinessTripPkId(long businessTripPkId) {
		_columnBitmask |= BUSINESSTRIPPKID_COLUMN_BITMASK;

		if (!_setOriginalBusinessTripPkId) {
			_setOriginalBusinessTripPkId = true;

			_originalBusinessTripPkId = _businessTripPkId;
		}

		_businessTripPkId = businessTripPkId;
	}

	public long getOriginalBusinessTripPkId() {
		return _originalBusinessTripPkId;
	}

	@Override
	public String getTicketNo() {
		if (_ticketNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _ticketNo;
		}
	}

	@Override
	public void setTicketNo(String ticketNo) {
		_columnBitmask |= TICKETNO_COLUMN_BITMASK;

		if (_originalTicketNo == null) {
			_originalTicketNo = _ticketNo;
		}

		_ticketNo = ticketNo;
	}

	public String getOriginalTicketNo() {
		return GetterUtil.getString(_originalTicketNo);
	}

	@Override
	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		_type = type;
	}

	@Override
	public String getFromCity() {
		if (_fromCity == null) {
			return StringPool.BLANK;
		}
		else {
			return _fromCity;
		}
	}

	@Override
	public void setFromCity(String fromCity) {
		_fromCity = fromCity;
	}

	@Override
	public String getToCity() {
		if (_toCity == null) {
			return StringPool.BLANK;
		}
		else {
			return _toCity;
		}
	}

	@Override
	public void setToCity(String toCity) {
		_toCity = toCity;
	}

	@Override
	public Date getDepartureDate() {
		return _departureDate;
	}

	@Override
	public void setDepartureDate(Date departureDate) {
		_departureDate = departureDate;
	}

	@Override
	public String getDepartureFlight() {
		if (_departureFlight == null) {
			return StringPool.BLANK;
		}
		else {
			return _departureFlight;
		}
	}

	@Override
	public void setDepartureFlight(String departureFlight) {
		_departureFlight = departureFlight;
	}

	@Override
	public Date getDepartureTime() {
		return _departureTime;
	}

	@Override
	public void setDepartureTime(Date departureTime) {
		_departureTime = departureTime;
	}

	@Override
	public String getClassInfo() {
		if (_classInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _classInfo;
		}
	}

	@Override
	public void setClassInfo(String classInfo) {
		_classInfo = classInfo;
	}

	@Override
	public double getPrice() {
		return _price;
	}

	@Override
	public void setPrice(double price) {
		_price = price;
	}

	@Override
	public String getCurrency() {
		if (_currency == null) {
			return StringPool.BLANK;
		}
		else {
			return _currency;
		}
	}

	@Override
	public void setCurrency(String currency) {
		_currency = currency;
	}

	@Override
	public String getTripType() {
		if (_tripType == null) {
			return StringPool.BLANK;
		}
		else {
			return _tripType;
		}
	}

	@Override
	public void setTripType(String tripType) {
		_columnBitmask |= TRIPTYPE_COLUMN_BITMASK;

		if (_originalTripType == null) {
			_originalTripType = _tripType;
		}

		_tripType = tripType;
	}

	public String getOriginalTripType() {
		return GetterUtil.getString(_originalTripType);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			BtFlightTrainInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BtFlightTrainInfo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BtFlightTrainInfo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BtFlightTrainInfoImpl btFlightTrainInfoImpl = new BtFlightTrainInfoImpl();

		btFlightTrainInfoImpl.setBtFlightTrainInfoId(getBtFlightTrainInfoId());
		btFlightTrainInfoImpl.setBusinessTripPkId(getBusinessTripPkId());
		btFlightTrainInfoImpl.setTicketNo(getTicketNo());
		btFlightTrainInfoImpl.setType(getType());
		btFlightTrainInfoImpl.setFromCity(getFromCity());
		btFlightTrainInfoImpl.setToCity(getToCity());
		btFlightTrainInfoImpl.setDepartureDate(getDepartureDate());
		btFlightTrainInfoImpl.setDepartureFlight(getDepartureFlight());
		btFlightTrainInfoImpl.setDepartureTime(getDepartureTime());
		btFlightTrainInfoImpl.setClassInfo(getClassInfo());
		btFlightTrainInfoImpl.setPrice(getPrice());
		btFlightTrainInfoImpl.setCurrency(getCurrency());
		btFlightTrainInfoImpl.setTripType(getTripType());

		btFlightTrainInfoImpl.resetOriginalValues();

		return btFlightTrainInfoImpl;
	}

	@Override
	public int compareTo(BtFlightTrainInfo btFlightTrainInfo) {
		long primaryKey = btFlightTrainInfo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BtFlightTrainInfo)) {
			return false;
		}

		BtFlightTrainInfo btFlightTrainInfo = (BtFlightTrainInfo)obj;

		long primaryKey = btFlightTrainInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BtFlightTrainInfoModelImpl btFlightTrainInfoModelImpl = this;

		btFlightTrainInfoModelImpl._originalBusinessTripPkId = btFlightTrainInfoModelImpl._businessTripPkId;

		btFlightTrainInfoModelImpl._setOriginalBusinessTripPkId = false;

		btFlightTrainInfoModelImpl._originalTicketNo = btFlightTrainInfoModelImpl._ticketNo;

		btFlightTrainInfoModelImpl._originalTripType = btFlightTrainInfoModelImpl._tripType;

		btFlightTrainInfoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BtFlightTrainInfo> toCacheModel() {
		BtFlightTrainInfoCacheModel btFlightTrainInfoCacheModel = new BtFlightTrainInfoCacheModel();

		btFlightTrainInfoCacheModel.btFlightTrainInfoId = getBtFlightTrainInfoId();

		btFlightTrainInfoCacheModel.businessTripPkId = getBusinessTripPkId();

		btFlightTrainInfoCacheModel.ticketNo = getTicketNo();

		String ticketNo = btFlightTrainInfoCacheModel.ticketNo;

		if ((ticketNo != null) && (ticketNo.length() == 0)) {
			btFlightTrainInfoCacheModel.ticketNo = null;
		}

		btFlightTrainInfoCacheModel.type = getType();

		String type = btFlightTrainInfoCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			btFlightTrainInfoCacheModel.type = null;
		}

		btFlightTrainInfoCacheModel.fromCity = getFromCity();

		String fromCity = btFlightTrainInfoCacheModel.fromCity;

		if ((fromCity != null) && (fromCity.length() == 0)) {
			btFlightTrainInfoCacheModel.fromCity = null;
		}

		btFlightTrainInfoCacheModel.toCity = getToCity();

		String toCity = btFlightTrainInfoCacheModel.toCity;

		if ((toCity != null) && (toCity.length() == 0)) {
			btFlightTrainInfoCacheModel.toCity = null;
		}

		Date departureDate = getDepartureDate();

		if (departureDate != null) {
			btFlightTrainInfoCacheModel.departureDate = departureDate.getTime();
		}
		else {
			btFlightTrainInfoCacheModel.departureDate = Long.MIN_VALUE;
		}

		btFlightTrainInfoCacheModel.departureFlight = getDepartureFlight();

		String departureFlight = btFlightTrainInfoCacheModel.departureFlight;

		if ((departureFlight != null) && (departureFlight.length() == 0)) {
			btFlightTrainInfoCacheModel.departureFlight = null;
		}

		Date departureTime = getDepartureTime();

		if (departureTime != null) {
			btFlightTrainInfoCacheModel.departureTime = departureTime.getTime();
		}
		else {
			btFlightTrainInfoCacheModel.departureTime = Long.MIN_VALUE;
		}

		btFlightTrainInfoCacheModel.classInfo = getClassInfo();

		String classInfo = btFlightTrainInfoCacheModel.classInfo;

		if ((classInfo != null) && (classInfo.length() == 0)) {
			btFlightTrainInfoCacheModel.classInfo = null;
		}

		btFlightTrainInfoCacheModel.price = getPrice();

		btFlightTrainInfoCacheModel.currency = getCurrency();

		String currency = btFlightTrainInfoCacheModel.currency;

		if ((currency != null) && (currency.length() == 0)) {
			btFlightTrainInfoCacheModel.currency = null;
		}

		btFlightTrainInfoCacheModel.tripType = getTripType();

		String tripType = btFlightTrainInfoCacheModel.tripType;

		if ((tripType != null) && (tripType.length() == 0)) {
			btFlightTrainInfoCacheModel.tripType = null;
		}

		return btFlightTrainInfoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{btFlightTrainInfoId=");
		sb.append(getBtFlightTrainInfoId());
		sb.append(", businessTripPkId=");
		sb.append(getBusinessTripPkId());
		sb.append(", ticketNo=");
		sb.append(getTicketNo());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", fromCity=");
		sb.append(getFromCity());
		sb.append(", toCity=");
		sb.append(getToCity());
		sb.append(", departureDate=");
		sb.append(getDepartureDate());
		sb.append(", departureFlight=");
		sb.append(getDepartureFlight());
		sb.append(", departureTime=");
		sb.append(getDepartureTime());
		sb.append(", classInfo=");
		sb.append(getClassInfo());
		sb.append(", price=");
		sb.append(getPrice());
		sb.append(", currency=");
		sb.append(getCurrency());
		sb.append(", tripType=");
		sb.append(getTripType());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.business.trip.model.BtFlightTrainInfo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>btFlightTrainInfoId</column-name><column-value><![CDATA[");
		sb.append(getBtFlightTrainInfoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>businessTripPkId</column-name><column-value><![CDATA[");
		sb.append(getBusinessTripPkId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ticketNo</column-name><column-value><![CDATA[");
		sb.append(getTicketNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fromCity</column-name><column-value><![CDATA[");
		sb.append(getFromCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>toCity</column-name><column-value><![CDATA[");
		sb.append(getToCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>departureDate</column-name><column-value><![CDATA[");
		sb.append(getDepartureDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>departureFlight</column-name><column-value><![CDATA[");
		sb.append(getDepartureFlight());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>departureTime</column-name><column-value><![CDATA[");
		sb.append(getDepartureTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classInfo</column-name><column-value><![CDATA[");
		sb.append(getClassInfo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>price</column-name><column-value><![CDATA[");
		sb.append(getPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currency</column-name><column-value><![CDATA[");
		sb.append(getCurrency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tripType</column-name><column-value><![CDATA[");
		sb.append(getTripType());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BtFlightTrainInfo.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BtFlightTrainInfo.class
		};
	private long _btFlightTrainInfoId;
	private long _businessTripPkId;
	private long _originalBusinessTripPkId;
	private boolean _setOriginalBusinessTripPkId;
	private String _ticketNo;
	private String _originalTicketNo;
	private String _type;
	private String _fromCity;
	private String _toCity;
	private Date _departureDate;
	private String _departureFlight;
	private Date _departureTime;
	private String _classInfo;
	private double _price;
	private String _currency;
	private String _tripType;
	private String _originalTripType;
	private long _columnBitmask;
	private BtFlightTrainInfo _escapedModel;
}