<?xml version="1.0"?>
<workflow-definition xmlns="urn:liferay.com:liferay-workflow_6.2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:liferay.com:liferay-workflow_6.2.0 http://www.liferay.com/dtd/liferay-workflow-definition_6_2_0.xsd">
	<name>Second Company Car</name>
	<description>The second company car workflow content.</description>
	<version>1</version>
	<state>
		<name>created</name>
		<metadata><![CDATA[{"transitions":{"review":{"bendpoints":[]}},"xy":[45,45]}]]></metadata>
		<initial>true</initial>
		<transitions>
			<transition>
				<name>review</name>
				<target>supervisor reviewer</target>
				<default>true</default>
			</transition>
		</transitions>
	</state>
	<state>
		<name>approved</name>
		<metadata>
			<![CDATA[{"xy":[848,54]}]]>
		</metadata>
		<actions>
			<action>
				<name>approve</name>
				<script>
					<![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
						import com.liferay.portal.kernel.workflow.WorkflowConstants;
						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.toStatus("approved"), workflowContext);]]>
				</script>
				<script-language>groovy</script-language>
				<execution-type>onEntry</execution-type>
			</action>
		</actions>
	</state>
	<task>
		<name>update</name>
		<metadata>
			<![CDATA[{"transitions":{"resubmit":{"bendpoints":[[303,140]]}},"xy":[406,295]}]]>
	    </metadata>
		<actions>
			<action>
				<name>reject</name>
				<script>
					<![CDATA[Packages.com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil.updateStatus(Packages.com.liferay.portal.kernel.workflow.WorkflowConstants.toStatus("draft"), workflowContext);]]>
				</script>
				<script-language>javascript</script-language>
				<execution-type>onAssignment</execution-type>
			</action>
			<notification>
				<name>Creator Modification Notification</name>
				<template>
						<![CDATA[Your submission was rejected by ${userName}, please modify and resubmit.]]>
				</template>
				<template-language>freemarker</template-language>
				<notification-type>user-notification</notification-type>
				<recipients>
					<user />
				</recipients>
				<execution-type>onAssignment</execution-type>
			</notification>
		</actions>
		<assignments>
			<user />
		</assignments>
		<transitions>
			<transition>
				<name>resubmit</name>
				<target>supervisor reviewer</target>
				<default>true</default>
			</transition>
		</transitions>
	</task>
	<task>
		<name>supervisor reviewer</name>
		<metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[]},"reject":{"bendpoints":[]}},"xy":[180,29]}]]></metadata>
		<actions>
			<action>
				<name>resubmit</name>
				<script>
					<![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
									import com.liferay.portal.kernel.workflow.WorkflowConstants;
									WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.toStatus("pending"), workflowContext);]]>
				</script>
				<script-language>groovy</script-language>
				<execution-type>onEntry</execution-type>
			</action>
		</actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
				import com.liferay.portal.service.UserLocalServiceUtil;
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role supervisorRole = (Role) serviceContext.getAttribute("vgcapon_secondCompanyCar_supervisor");			
				user = null;
				roles = new ArrayList<Role>();
				roles.add(supervisorRole);
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
		<transitions>
			<transition>
				<name>reject</name>
				<target>update</target>
				<default>true</default>
			</transition>
			<transition>
				<name>approve</name>
				<target>admin reviewer</target>
				<default>false</default>
			</transition>
		</transitions>
	</task>
	<task>
		<name>admin reviewer</name>
		<metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[]},"reject":{"bendpoints":[]}},"xy":[563,44]}]]></metadata>
		<actions>
			<action>
				<name>approve</name>
				<script>
					<![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
									import com.liferay.portal.kernel.workflow.WorkflowConstants;
									WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.toStatus("denied"), workflowContext);]]>
				</script>
				<script-language>groovy</script-language>
				<execution-type>onEntry</execution-type>
			</action>
		</actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[                	
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role[] adminRoles = (Role[]) serviceContext.getAttribute("vgcapon_secondCompanyCar_admin");
				roles = new ArrayList<Role>();
				for(Role role:adminRoles) {
					roles.add(role);
				}
				user = null;
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
		<transitions>
			<transition>
				<name>approve</name>
				<target>approved</target>
				<default>true</default>
			</transition>
			<transition>
				<name>reject</name>
				<target>update</target>
				<default>false</default>
			</transition>
		</transitions>
	</task>
</workflow-definition>
