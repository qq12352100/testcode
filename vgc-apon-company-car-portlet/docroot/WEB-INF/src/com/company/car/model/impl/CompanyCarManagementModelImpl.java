/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.company.car.model.impl;

import com.company.car.model.CompanyCarManagement;
import com.company.car.model.CompanyCarManagementModel;
import com.company.car.model.CompanyCarManagementSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CompanyCarManagement service. Represents a row in the &quot;vgcapon_CompanyCarManagement&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.company.car.model.CompanyCarManagementModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CompanyCarManagementImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CompanyCarManagementImpl
 * @see com.company.car.model.CompanyCarManagement
 * @see com.company.car.model.CompanyCarManagementModel
 * @generated
 */
@JSON(strict = true)
public class CompanyCarManagementModelImpl extends BaseModelImpl<CompanyCarManagement>
	implements CompanyCarManagementModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a company car management model instance should use the {@link com.company.car.model.CompanyCarManagement} interface instead.
	 */
	public static final String TABLE_NAME = "vgcapon_CompanyCarManagement";
	public static final Object[][] TABLE_COLUMNS = {
			{ "companyCarManagementId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "carNo", Types.VARCHAR },
			{ "carType", Types.VARCHAR },
			{ "contractType", Types.VARCHAR },
			{ "gradeType", Types.VARCHAR },
			{ "grade", Types.VARCHAR },
			{ "carBrand", Types.VARCHAR },
			{ "carModel", Types.VARCHAR },
			{ "carCategory", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table vgcapon_CompanyCarManagement (companyCarManagementId LONG not null primary key,createDate DATE null,modifiedDate DATE null,carNo VARCHAR(75) null,carType VARCHAR(75) null,contractType VARCHAR(75) null,gradeType VARCHAR(75) null,grade VARCHAR(75) null,carBrand VARCHAR(75) null,carModel VARCHAR(75) null,carCategory VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table vgcapon_CompanyCarManagement";
	public static final String ORDER_BY_JPQL = " ORDER BY companyCarManagement.carCategory ASC";
	public static final String ORDER_BY_SQL = " ORDER BY vgcapon_CompanyCarManagement.carCategory ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.company.car.model.CompanyCarManagement"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.company.car.model.CompanyCarManagement"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.company.car.model.CompanyCarManagement"),
			true);
	public static long CARBRAND_COLUMN_BITMASK = 1L;
	public static long CARCATEGORY_COLUMN_BITMASK = 2L;
	public static long CARNO_COLUMN_BITMASK = 4L;
	public static long CARTYPE_COLUMN_BITMASK = 8L;
	public static long CONTRACTTYPE_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CompanyCarManagement toModel(
		CompanyCarManagementSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CompanyCarManagement model = new CompanyCarManagementImpl();

		model.setCompanyCarManagementId(soapModel.getCompanyCarManagementId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCarNo(soapModel.getCarNo());
		model.setCarType(soapModel.getCarType());
		model.setContractType(soapModel.getContractType());
		model.setGradeType(soapModel.getGradeType());
		model.setGrade(soapModel.getGrade());
		model.setCarBrand(soapModel.getCarBrand());
		model.setCarModel(soapModel.getCarModel());
		model.setCarCategory(soapModel.getCarCategory());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CompanyCarManagement> toModels(
		CompanyCarManagementSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CompanyCarManagement> models = new ArrayList<CompanyCarManagement>(soapModels.length);

		for (CompanyCarManagementSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.company.car.model.CompanyCarManagement"));

	public CompanyCarManagementModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _companyCarManagementId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCompanyCarManagementId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _companyCarManagementId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CompanyCarManagement.class;
	}

	@Override
	public String getModelClassName() {
		return CompanyCarManagement.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("companyCarManagementId", getCompanyCarManagementId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("carNo", getCarNo());
		attributes.put("carType", getCarType());
		attributes.put("contractType", getContractType());
		attributes.put("gradeType", getGradeType());
		attributes.put("grade", getGrade());
		attributes.put("carBrand", getCarBrand());
		attributes.put("carModel", getCarModel());
		attributes.put("carCategory", getCarCategory());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long companyCarManagementId = (Long)attributes.get(
				"companyCarManagementId");

		if (companyCarManagementId != null) {
			setCompanyCarManagementId(companyCarManagementId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String carNo = (String)attributes.get("carNo");

		if (carNo != null) {
			setCarNo(carNo);
		}

		String carType = (String)attributes.get("carType");

		if (carType != null) {
			setCarType(carType);
		}

		String contractType = (String)attributes.get("contractType");

		if (contractType != null) {
			setContractType(contractType);
		}

		String gradeType = (String)attributes.get("gradeType");

		if (gradeType != null) {
			setGradeType(gradeType);
		}

		String grade = (String)attributes.get("grade");

		if (grade != null) {
			setGrade(grade);
		}

		String carBrand = (String)attributes.get("carBrand");

		if (carBrand != null) {
			setCarBrand(carBrand);
		}

		String carModel = (String)attributes.get("carModel");

		if (carModel != null) {
			setCarModel(carModel);
		}

		String carCategory = (String)attributes.get("carCategory");

		if (carCategory != null) {
			setCarCategory(carCategory);
		}
	}

	@JSON
	@Override
	public long getCompanyCarManagementId() {
		return _companyCarManagementId;
	}

	@Override
	public void setCompanyCarManagementId(long companyCarManagementId) {
		_companyCarManagementId = companyCarManagementId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCarNo() {
		if (_carNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _carNo;
		}
	}

	@Override
	public void setCarNo(String carNo) {
		_columnBitmask |= CARNO_COLUMN_BITMASK;

		if (_originalCarNo == null) {
			_originalCarNo = _carNo;
		}

		_carNo = carNo;
	}

	public String getOriginalCarNo() {
		return GetterUtil.getString(_originalCarNo);
	}

	@JSON
	@Override
	public String getCarType() {
		if (_carType == null) {
			return StringPool.BLANK;
		}
		else {
			return _carType;
		}
	}

	@Override
	public void setCarType(String carType) {
		_columnBitmask |= CARTYPE_COLUMN_BITMASK;

		if (_originalCarType == null) {
			_originalCarType = _carType;
		}

		_carType = carType;
	}

	public String getOriginalCarType() {
		return GetterUtil.getString(_originalCarType);
	}

	@JSON
	@Override
	public String getContractType() {
		if (_contractType == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractType;
		}
	}

	@Override
	public void setContractType(String contractType) {
		_columnBitmask |= CONTRACTTYPE_COLUMN_BITMASK;

		if (_originalContractType == null) {
			_originalContractType = _contractType;
		}

		_contractType = contractType;
	}

	public String getOriginalContractType() {
		return GetterUtil.getString(_originalContractType);
	}

	@JSON
	@Override
	public String getGradeType() {
		if (_gradeType == null) {
			return StringPool.BLANK;
		}
		else {
			return _gradeType;
		}
	}

	@Override
	public void setGradeType(String gradeType) {
		_gradeType = gradeType;
	}

	@JSON
	@Override
	public String getGrade() {
		if (_grade == null) {
			return StringPool.BLANK;
		}
		else {
			return _grade;
		}
	}

	@Override
	public void setGrade(String grade) {
		_grade = grade;
	}

	@JSON
	@Override
	public String getCarBrand() {
		if (_carBrand == null) {
			return StringPool.BLANK;
		}
		else {
			return _carBrand;
		}
	}

	@Override
	public void setCarBrand(String carBrand) {
		_columnBitmask |= CARBRAND_COLUMN_BITMASK;

		if (_originalCarBrand == null) {
			_originalCarBrand = _carBrand;
		}

		_carBrand = carBrand;
	}

	public String getOriginalCarBrand() {
		return GetterUtil.getString(_originalCarBrand);
	}

	@JSON
	@Override
	public String getCarModel() {
		if (_carModel == null) {
			return StringPool.BLANK;
		}
		else {
			return _carModel;
		}
	}

	@Override
	public void setCarModel(String carModel) {
		_carModel = carModel;
	}

	@JSON
	@Override
	public String getCarCategory() {
		if (_carCategory == null) {
			return StringPool.BLANK;
		}
		else {
			return _carCategory;
		}
	}

	@Override
	public void setCarCategory(String carCategory) {
		_columnBitmask = -1L;

		if (_originalCarCategory == null) {
			_originalCarCategory = _carCategory;
		}

		_carCategory = carCategory;
	}

	public String getOriginalCarCategory() {
		return GetterUtil.getString(_originalCarCategory);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			CompanyCarManagement.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CompanyCarManagement toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CompanyCarManagement)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CompanyCarManagementImpl companyCarManagementImpl = new CompanyCarManagementImpl();

		companyCarManagementImpl.setCompanyCarManagementId(getCompanyCarManagementId());
		companyCarManagementImpl.setCreateDate(getCreateDate());
		companyCarManagementImpl.setModifiedDate(getModifiedDate());
		companyCarManagementImpl.setCarNo(getCarNo());
		companyCarManagementImpl.setCarType(getCarType());
		companyCarManagementImpl.setContractType(getContractType());
		companyCarManagementImpl.setGradeType(getGradeType());
		companyCarManagementImpl.setGrade(getGrade());
		companyCarManagementImpl.setCarBrand(getCarBrand());
		companyCarManagementImpl.setCarModel(getCarModel());
		companyCarManagementImpl.setCarCategory(getCarCategory());

		companyCarManagementImpl.resetOriginalValues();

		return companyCarManagementImpl;
	}

	@Override
	public int compareTo(CompanyCarManagement companyCarManagement) {
		int value = 0;

		value = getCarCategory().compareTo(companyCarManagement.getCarCategory());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CompanyCarManagement)) {
			return false;
		}

		CompanyCarManagement companyCarManagement = (CompanyCarManagement)obj;

		long primaryKey = companyCarManagement.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CompanyCarManagementModelImpl companyCarManagementModelImpl = this;

		companyCarManagementModelImpl._originalCarNo = companyCarManagementModelImpl._carNo;

		companyCarManagementModelImpl._originalCarType = companyCarManagementModelImpl._carType;

		companyCarManagementModelImpl._originalContractType = companyCarManagementModelImpl._contractType;

		companyCarManagementModelImpl._originalCarBrand = companyCarManagementModelImpl._carBrand;

		companyCarManagementModelImpl._originalCarCategory = companyCarManagementModelImpl._carCategory;

		companyCarManagementModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CompanyCarManagement> toCacheModel() {
		CompanyCarManagementCacheModel companyCarManagementCacheModel = new CompanyCarManagementCacheModel();

		companyCarManagementCacheModel.companyCarManagementId = getCompanyCarManagementId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			companyCarManagementCacheModel.createDate = createDate.getTime();
		}
		else {
			companyCarManagementCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			companyCarManagementCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			companyCarManagementCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		companyCarManagementCacheModel.carNo = getCarNo();

		String carNo = companyCarManagementCacheModel.carNo;

		if ((carNo != null) && (carNo.length() == 0)) {
			companyCarManagementCacheModel.carNo = null;
		}

		companyCarManagementCacheModel.carType = getCarType();

		String carType = companyCarManagementCacheModel.carType;

		if ((carType != null) && (carType.length() == 0)) {
			companyCarManagementCacheModel.carType = null;
		}

		companyCarManagementCacheModel.contractType = getContractType();

		String contractType = companyCarManagementCacheModel.contractType;

		if ((contractType != null) && (contractType.length() == 0)) {
			companyCarManagementCacheModel.contractType = null;
		}

		companyCarManagementCacheModel.gradeType = getGradeType();

		String gradeType = companyCarManagementCacheModel.gradeType;

		if ((gradeType != null) && (gradeType.length() == 0)) {
			companyCarManagementCacheModel.gradeType = null;
		}

		companyCarManagementCacheModel.grade = getGrade();

		String grade = companyCarManagementCacheModel.grade;

		if ((grade != null) && (grade.length() == 0)) {
			companyCarManagementCacheModel.grade = null;
		}

		companyCarManagementCacheModel.carBrand = getCarBrand();

		String carBrand = companyCarManagementCacheModel.carBrand;

		if ((carBrand != null) && (carBrand.length() == 0)) {
			companyCarManagementCacheModel.carBrand = null;
		}

		companyCarManagementCacheModel.carModel = getCarModel();

		String carModel = companyCarManagementCacheModel.carModel;

		if ((carModel != null) && (carModel.length() == 0)) {
			companyCarManagementCacheModel.carModel = null;
		}

		companyCarManagementCacheModel.carCategory = getCarCategory();

		String carCategory = companyCarManagementCacheModel.carCategory;

		if ((carCategory != null) && (carCategory.length() == 0)) {
			companyCarManagementCacheModel.carCategory = null;
		}

		return companyCarManagementCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{companyCarManagementId=");
		sb.append(getCompanyCarManagementId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", carNo=");
		sb.append(getCarNo());
		sb.append(", carType=");
		sb.append(getCarType());
		sb.append(", contractType=");
		sb.append(getContractType());
		sb.append(", gradeType=");
		sb.append(getGradeType());
		sb.append(", grade=");
		sb.append(getGrade());
		sb.append(", carBrand=");
		sb.append(getCarBrand());
		sb.append(", carModel=");
		sb.append(getCarModel());
		sb.append(", carCategory=");
		sb.append(getCarCategory());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.company.car.model.CompanyCarManagement");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>companyCarManagementId</column-name><column-value><![CDATA[");
		sb.append(getCompanyCarManagementId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>carNo</column-name><column-value><![CDATA[");
		sb.append(getCarNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>carType</column-name><column-value><![CDATA[");
		sb.append(getCarType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractType</column-name><column-value><![CDATA[");
		sb.append(getContractType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gradeType</column-name><column-value><![CDATA[");
		sb.append(getGradeType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>grade</column-name><column-value><![CDATA[");
		sb.append(getGrade());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>carBrand</column-name><column-value><![CDATA[");
		sb.append(getCarBrand());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>carModel</column-name><column-value><![CDATA[");
		sb.append(getCarModel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>carCategory</column-name><column-value><![CDATA[");
		sb.append(getCarCategory());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CompanyCarManagement.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CompanyCarManagement.class
		};
	private long _companyCarManagementId;
	private Date _createDate;
	private Date _modifiedDate;
	private String _carNo;
	private String _originalCarNo;
	private String _carType;
	private String _originalCarType;
	private String _contractType;
	private String _originalContractType;
	private String _gradeType;
	private String _grade;
	private String _carBrand;
	private String _originalCarBrand;
	private String _carModel;
	private String _carCategory;
	private String _originalCarCategory;
	private long _columnBitmask;
	private CompanyCarManagement _escapedModel;
}