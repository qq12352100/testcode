/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.company.car.service.base;

import com.company.car.model.SecondCompanyCar;
import com.company.car.service.SecondCompanyCarService;
import com.company.car.service.persistence.CompanyCarManagementPersistence;
import com.company.car.service.persistence.FirstCompanyCarPersistence;
import com.company.car.service.persistence.SecondCompanyCarPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the second company car remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.company.car.service.impl.SecondCompanyCarServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.company.car.service.impl.SecondCompanyCarServiceImpl
 * @see com.company.car.service.SecondCompanyCarServiceUtil
 * @generated
 */
public abstract class SecondCompanyCarServiceBaseImpl extends BaseServiceImpl
	implements SecondCompanyCarService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.company.car.service.SecondCompanyCarServiceUtil} to access the second company car remote service.
	 */

	/**
	 * Returns the company car management local service.
	 *
	 * @return the company car management local service
	 */
	public com.company.car.service.CompanyCarManagementLocalService getCompanyCarManagementLocalService() {
		return companyCarManagementLocalService;
	}

	/**
	 * Sets the company car management local service.
	 *
	 * @param companyCarManagementLocalService the company car management local service
	 */
	public void setCompanyCarManagementLocalService(
		com.company.car.service.CompanyCarManagementLocalService companyCarManagementLocalService) {
		this.companyCarManagementLocalService = companyCarManagementLocalService;
	}

	/**
	 * Returns the company car management remote service.
	 *
	 * @return the company car management remote service
	 */
	public com.company.car.service.CompanyCarManagementService getCompanyCarManagementService() {
		return companyCarManagementService;
	}

	/**
	 * Sets the company car management remote service.
	 *
	 * @param companyCarManagementService the company car management remote service
	 */
	public void setCompanyCarManagementService(
		com.company.car.service.CompanyCarManagementService companyCarManagementService) {
		this.companyCarManagementService = companyCarManagementService;
	}

	/**
	 * Returns the company car management persistence.
	 *
	 * @return the company car management persistence
	 */
	public CompanyCarManagementPersistence getCompanyCarManagementPersistence() {
		return companyCarManagementPersistence;
	}

	/**
	 * Sets the company car management persistence.
	 *
	 * @param companyCarManagementPersistence the company car management persistence
	 */
	public void setCompanyCarManagementPersistence(
		CompanyCarManagementPersistence companyCarManagementPersistence) {
		this.companyCarManagementPersistence = companyCarManagementPersistence;
	}

	/**
	 * Returns the first company car local service.
	 *
	 * @return the first company car local service
	 */
	public com.company.car.service.FirstCompanyCarLocalService getFirstCompanyCarLocalService() {
		return firstCompanyCarLocalService;
	}

	/**
	 * Sets the first company car local service.
	 *
	 * @param firstCompanyCarLocalService the first company car local service
	 */
	public void setFirstCompanyCarLocalService(
		com.company.car.service.FirstCompanyCarLocalService firstCompanyCarLocalService) {
		this.firstCompanyCarLocalService = firstCompanyCarLocalService;
	}

	/**
	 * Returns the first company car remote service.
	 *
	 * @return the first company car remote service
	 */
	public com.company.car.service.FirstCompanyCarService getFirstCompanyCarService() {
		return firstCompanyCarService;
	}

	/**
	 * Sets the first company car remote service.
	 *
	 * @param firstCompanyCarService the first company car remote service
	 */
	public void setFirstCompanyCarService(
		com.company.car.service.FirstCompanyCarService firstCompanyCarService) {
		this.firstCompanyCarService = firstCompanyCarService;
	}

	/**
	 * Returns the first company car persistence.
	 *
	 * @return the first company car persistence
	 */
	public FirstCompanyCarPersistence getFirstCompanyCarPersistence() {
		return firstCompanyCarPersistence;
	}

	/**
	 * Sets the first company car persistence.
	 *
	 * @param firstCompanyCarPersistence the first company car persistence
	 */
	public void setFirstCompanyCarPersistence(
		FirstCompanyCarPersistence firstCompanyCarPersistence) {
		this.firstCompanyCarPersistence = firstCompanyCarPersistence;
	}

	/**
	 * Returns the second company car local service.
	 *
	 * @return the second company car local service
	 */
	public com.company.car.service.SecondCompanyCarLocalService getSecondCompanyCarLocalService() {
		return secondCompanyCarLocalService;
	}

	/**
	 * Sets the second company car local service.
	 *
	 * @param secondCompanyCarLocalService the second company car local service
	 */
	public void setSecondCompanyCarLocalService(
		com.company.car.service.SecondCompanyCarLocalService secondCompanyCarLocalService) {
		this.secondCompanyCarLocalService = secondCompanyCarLocalService;
	}

	/**
	 * Returns the second company car remote service.
	 *
	 * @return the second company car remote service
	 */
	public com.company.car.service.SecondCompanyCarService getSecondCompanyCarService() {
		return secondCompanyCarService;
	}

	/**
	 * Sets the second company car remote service.
	 *
	 * @param secondCompanyCarService the second company car remote service
	 */
	public void setSecondCompanyCarService(
		com.company.car.service.SecondCompanyCarService secondCompanyCarService) {
		this.secondCompanyCarService = secondCompanyCarService;
	}

	/**
	 * Returns the second company car persistence.
	 *
	 * @return the second company car persistence
	 */
	public SecondCompanyCarPersistence getSecondCompanyCarPersistence() {
		return secondCompanyCarPersistence;
	}

	/**
	 * Sets the second company car persistence.
	 *
	 * @param secondCompanyCarPersistence the second company car persistence
	 */
	public void setSecondCompanyCarPersistence(
		SecondCompanyCarPersistence secondCompanyCarPersistence) {
		this.secondCompanyCarPersistence = secondCompanyCarPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return SecondCompanyCar.class;
	}

	protected String getModelClassName() {
		return SecondCompanyCar.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = secondCompanyCarPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.company.car.service.CompanyCarManagementLocalService.class)
	protected com.company.car.service.CompanyCarManagementLocalService companyCarManagementLocalService;
	@BeanReference(type = com.company.car.service.CompanyCarManagementService.class)
	protected com.company.car.service.CompanyCarManagementService companyCarManagementService;
	@BeanReference(type = CompanyCarManagementPersistence.class)
	protected CompanyCarManagementPersistence companyCarManagementPersistence;
	@BeanReference(type = com.company.car.service.FirstCompanyCarLocalService.class)
	protected com.company.car.service.FirstCompanyCarLocalService firstCompanyCarLocalService;
	@BeanReference(type = com.company.car.service.FirstCompanyCarService.class)
	protected com.company.car.service.FirstCompanyCarService firstCompanyCarService;
	@BeanReference(type = FirstCompanyCarPersistence.class)
	protected FirstCompanyCarPersistence firstCompanyCarPersistence;
	@BeanReference(type = com.company.car.service.SecondCompanyCarLocalService.class)
	protected com.company.car.service.SecondCompanyCarLocalService secondCompanyCarLocalService;
	@BeanReference(type = com.company.car.service.SecondCompanyCarService.class)
	protected com.company.car.service.SecondCompanyCarService secondCompanyCarService;
	@BeanReference(type = SecondCompanyCarPersistence.class)
	protected SecondCompanyCarPersistence secondCompanyCarPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private SecondCompanyCarServiceClpInvoker _clpInvoker = new SecondCompanyCarServiceClpInvoker();
}