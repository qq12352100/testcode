/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.e.leave.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.GroupedModel;
import com.liferay.portal.model.WorkflowedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ELeave service. Represents a row in the &quot;vgcapon_ELeave&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.e.leave.model.impl.ELeaveModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.e.leave.model.impl.ELeaveImpl}.
 * </p>
 *
 * @author EZEYIFE
 * @see ELeave
 * @see com.e.leave.model.impl.ELeaveImpl
 * @see com.e.leave.model.impl.ELeaveModelImpl
 * @generated
 */
public interface ELeaveModel extends BaseModel<ELeave>, GroupedModel,
	WorkflowedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a e leave model instance should use the {@link ELeave} interface instead.
	 */

	/**
	 * Returns the primary key of this e leave.
	 *
	 * @return the primary key of this e leave
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this e leave.
	 *
	 * @param primaryKey the primary key of this e leave
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the e leave ID of this e leave.
	 *
	 * @return the e leave ID of this e leave
	 */
	public long getELeaveId();

	/**
	 * Sets the e leave ID of this e leave.
	 *
	 * @param eLeaveId the e leave ID of this e leave
	 */
	public void setELeaveId(long eLeaveId);

	/**
	 * Returns the group ID of this e leave.
	 *
	 * @return the group ID of this e leave
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this e leave.
	 *
	 * @param groupId the group ID of this e leave
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the user ID of this e leave.
	 *
	 * @return the user ID of this e leave
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this e leave.
	 *
	 * @param userId the user ID of this e leave
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this e leave.
	 *
	 * @return the user uuid of this e leave
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this e leave.
	 *
	 * @param userUuid the user uuid of this e leave
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this e leave.
	 *
	 * @return the user name of this e leave
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this e leave.
	 *
	 * @param userName the user name of this e leave
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this e leave.
	 *
	 * @return the create date of this e leave
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this e leave.
	 *
	 * @param createDate the create date of this e leave
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this e leave.
	 *
	 * @return the modified date of this e leave
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this e leave.
	 *
	 * @param modifiedDate the modified date of this e leave
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the company ID of this e leave.
	 *
	 * @return the company ID of this e leave
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this e leave.
	 *
	 * @param companyId the company ID of this e leave
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the ticket no of this e leave.
	 *
	 * @return the ticket no of this e leave
	 */
	@AutoEscape
	public String getTicketNo();

	/**
	 * Sets the ticket no of this e leave.
	 *
	 * @param ticketNo the ticket no of this e leave
	 */
	public void setTicketNo(String ticketNo);

	/**
	 * Returns the staff name of this e leave.
	 *
	 * @return the staff name of this e leave
	 */
	@AutoEscape
	public String getStaffName();

	/**
	 * Sets the staff name of this e leave.
	 *
	 * @param staffName the staff name of this e leave
	 */
	public void setStaffName(String staffName);

	/**
	 * Returns the staff code of this e leave.
	 *
	 * @return the staff code of this e leave
	 */
	@AutoEscape
	public String getStaffCode();

	/**
	 * Sets the staff code of this e leave.
	 *
	 * @param staffCode the staff code of this e leave
	 */
	public void setStaffCode(String staffCode);

	/**
	 * Returns the company of this e leave.
	 *
	 * @return the company of this e leave
	 */
	@AutoEscape
	public String getCompany();

	/**
	 * Sets the company of this e leave.
	 *
	 * @param company the company of this e leave
	 */
	public void setCompany(String company);

	/**
	 * Returns the division of this e leave.
	 *
	 * @return the division of this e leave
	 */
	@AutoEscape
	public String getDivision();

	/**
	 * Sets the division of this e leave.
	 *
	 * @param division the division of this e leave
	 */
	public void setDivision(String division);

	/**
	 * Returns the department of this e leave.
	 *
	 * @return the department of this e leave
	 */
	@AutoEscape
	public String getDepartment();

	/**
	 * Sets the department of this e leave.
	 *
	 * @param department the department of this e leave
	 */
	public void setDepartment(String department);

	/**
	 * Returns the cost center of this e leave.
	 *
	 * @return the cost center of this e leave
	 */
	@AutoEscape
	public String getCostCenter();

	/**
	 * Sets the cost center of this e leave.
	 *
	 * @param costCenter the cost center of this e leave
	 */
	public void setCostCenter(String costCenter);

	/**
	 * Returns the office phone of this e leave.
	 *
	 * @return the office phone of this e leave
	 */
	@AutoEscape
	public String getOfficePhone();

	/**
	 * Sets the office phone of this e leave.
	 *
	 * @param officePhone the office phone of this e leave
	 */
	public void setOfficePhone(String officePhone);

	/**
	 * Returns the mobile phone of this e leave.
	 *
	 * @return the mobile phone of this e leave
	 */
	@AutoEscape
	public String getMobilePhone();

	/**
	 * Sets the mobile phone of this e leave.
	 *
	 * @param mobilePhone the mobile phone of this e leave
	 */
	public void setMobilePhone(String mobilePhone);

	/**
	 * Returns the email of this e leave.
	 *
	 * @return the email of this e leave
	 */
	@AutoEscape
	public String getEmail();

	/**
	 * Sets the email of this e leave.
	 *
	 * @param email the email of this e leave
	 */
	public void setEmail(String email);

	/**
	 * Returns the position type of this e leave.
	 *
	 * @return the position type of this e leave
	 */
	@AutoEscape
	public String getPositionType();

	/**
	 * Sets the position type of this e leave.
	 *
	 * @param positionType the position type of this e leave
	 */
	public void setPositionType(String positionType);

	/**
	 * Returns the is applicant agent of this e leave.
	 *
	 * @return the is applicant agent of this e leave
	 */
	public boolean getIsApplicantAgent();

	/**
	 * Returns <code>true</code> if this e leave is is applicant agent.
	 *
	 * @return <code>true</code> if this e leave is is applicant agent; <code>false</code> otherwise
	 */
	public boolean isIsApplicantAgent();

	/**
	 * Sets whether this e leave is is applicant agent.
	 *
	 * @param isApplicantAgent the is applicant agent of this e leave
	 */
	public void setIsApplicantAgent(boolean isApplicantAgent);

	/**
	 * Returns the is approver agent of this e leave.
	 *
	 * @return the is approver agent of this e leave
	 */
	public boolean getIsApproverAgent();

	/**
	 * Returns <code>true</code> if this e leave is is approver agent.
	 *
	 * @return <code>true</code> if this e leave is is approver agent; <code>false</code> otherwise
	 */
	public boolean isIsApproverAgent();

	/**
	 * Sets whether this e leave is is approver agent.
	 *
	 * @param isApproverAgent the is approver agent of this e leave
	 */
	public void setIsApproverAgent(boolean isApproverAgent);

	/**
	 * Returns the process type of this e leave.
	 *
	 * @return the process type of this e leave
	 */
	@AutoEscape
	public String getProcessType();

	/**
	 * Sets the process type of this e leave.
	 *
	 * @param processType the process type of this e leave
	 */
	public void setProcessType(String processType);

	/**
	 * Returns the sub process type of this e leave.
	 *
	 * @return the sub process type of this e leave
	 */
	@AutoEscape
	public String getSubProcessType();

	/**
	 * Sets the sub process type of this e leave.
	 *
	 * @param subProcessType the sub process type of this e leave
	 */
	public void setSubProcessType(String subProcessType);

	/**
	 * Returns the submitted date of this e leave.
	 *
	 * @return the submitted date of this e leave
	 */
	public Date getSubmittedDate();

	/**
	 * Sets the submitted date of this e leave.
	 *
	 * @param submittedDate the submitted date of this e leave
	 */
	public void setSubmittedDate(Date submittedDate);

	/**
	 * Returns the comments of this e leave.
	 *
	 * @return the comments of this e leave
	 */
	@AutoEscape
	public String getComments();

	/**
	 * Sets the comments of this e leave.
	 *
	 * @param comments the comments of this e leave
	 */
	public void setComments(String comments);

	/**
	 * Returns the status of this e leave.
	 *
	 * @return the status of this e leave
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this e leave.
	 *
	 * @param status the status of this e leave
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this e leave.
	 *
	 * @return the status by user ID of this e leave
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this e leave.
	 *
	 * @param statusByUserId the status by user ID of this e leave
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this e leave.
	 *
	 * @return the status by user uuid of this e leave
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getStatusByUserUuid() throws SystemException;

	/**
	 * Sets the status by user uuid of this e leave.
	 *
	 * @param statusByUserUuid the status by user uuid of this e leave
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this e leave.
	 *
	 * @return the status by user name of this e leave
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this e leave.
	 *
	 * @param statusByUserName the status by user name of this e leave
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this e leave.
	 *
	 * @return the status date of this e leave
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this e leave.
	 *
	 * @param statusDate the status date of this e leave
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns the total leave entitlement of this e leave.
	 *
	 * @return the total leave entitlement of this e leave
	 */
	@AutoEscape
	public String getTotalLeaveEntitlement();

	/**
	 * Sets the total leave entitlement of this e leave.
	 *
	 * @param totalLeaveEntitlement the total leave entitlement of this e leave
	 */
	public void setTotalLeaveEntitlement(String totalLeaveEntitlement);

	/**
	 * Returns the total duration of this e leave.
	 *
	 * @return the total duration of this e leave
	 */
	@AutoEscape
	public String getTotalDuration();

	/**
	 * Sets the total duration of this e leave.
	 *
	 * @param totalDuration the total duration of this e leave
	 */
	public void setTotalDuration(String totalDuration);

	/**
	 * Returns the remaining leave days before of this e leave.
	 *
	 * @return the remaining leave days before of this e leave
	 */
	@AutoEscape
	public String getRemainingLeaveDaysBefore();

	/**
	 * Sets the remaining leave days before of this e leave.
	 *
	 * @param remainingLeaveDaysBefore the remaining leave days before of this e leave
	 */
	public void setRemainingLeaveDaysBefore(String remainingLeaveDaysBefore);

	/**
	 * Returns the remaining leave days after of this e leave.
	 *
	 * @return the remaining leave days after of this e leave
	 */
	@AutoEscape
	public String getRemainingLeaveDaysAfter();

	/**
	 * Sets the remaining leave days after of this e leave.
	 *
	 * @param remainingLeaveDaysAfter the remaining leave days after of this e leave
	 */
	public void setRemainingLeaveDaysAfter(String remainingLeaveDaysAfter);

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #isApproved()}
	 */
	@Override
	public boolean getApproved();

	/**
	 * Returns <code>true</code> if this e leave is approved.
	 *
	 * @return <code>true</code> if this e leave is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this e leave is denied.
	 *
	 * @return <code>true</code> if this e leave is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this e leave is a draft.
	 *
	 * @return <code>true</code> if this e leave is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this e leave is expired.
	 *
	 * @return <code>true</code> if this e leave is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this e leave is inactive.
	 *
	 * @return <code>true</code> if this e leave is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this e leave is incomplete.
	 *
	 * @return <code>true</code> if this e leave is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this e leave is pending.
	 *
	 * @return <code>true</code> if this e leave is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this e leave is scheduled.
	 *
	 * @return <code>true</code> if this e leave is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.e.leave.model.ELeave eLeave);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.e.leave.model.ELeave> toCacheModel();

	@Override
	public com.e.leave.model.ELeave toEscapedModel();

	@Override
	public com.e.leave.model.ELeave toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}