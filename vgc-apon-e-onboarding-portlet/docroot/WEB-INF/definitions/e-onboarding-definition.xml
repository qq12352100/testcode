<?xml version="1.0" encoding="UTF-8"?>
<workflow-definition xmlns="urn:liferay.com:liferay-workflow_6.2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:liferay.com:liferay-workflow_6.2.0 http://www.liferay.com/dtd/liferay-workflow-definition_6_2_0.xsd">
    <name>E Onboarding</name>
	<description>The e-onboarding workflow content.</description>
    <version>1</version>
    <state>
        <name>created</name>
        <metadata><![CDATA[{"transitions":{"created":{"bendpoints":[]},"review":{"bendpoints":[]}},"xy":[40,242]}]]></metadata>
        <initial>true</initial>
        <transitions>
            <transition>
                <name>review</name>
                <target>fork</target>
                <default>true</default>
            </transition>
        </transitions>
    </state>
    <task>
        <name>security review</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[]},"approved":{"bendpoints":[]}},"xy":[530,150]}]]></metadata>
		<actions>
			<action>
				<name>approve</name>
				<script>
<![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
						import com.liferay.portal.kernel.workflow.WorkflowConstants;

						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.toStatus("denied"), workflowContext);]]>
		</script>
				<script-language>groovy</script-language>
				<execution-type>onExit</execution-type>
			</action>
		</actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role[] securityRoles = (Role[]) serviceContext.getAttribute("vgcapon_eOnboarding_security");
				roles = new ArrayList<Role>();
				for(Role role : securityRoles) {
					roles.add(role);
				}
				user = null;
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>approve</name>
                <target>join</target>
                <default>true</default>
            </transition>
        </transitions>
    </task>
    <state>
        <name>approved</name>
        <metadata><![CDATA[{"terminal":true,"xy":[930,225]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[Packages.com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil.updateStatus(Packages.com.liferay.portal.kernel.workflow.WorkflowConstants.toStatus("approved"), workflowContext);]]></script>
                <script-language>javascript</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
    </state>
    <fork>
        <name>fork</name>
        <metadata><![CDATA[{"transitions":{"fork":{"bendpoints":[]},"controlling/finance review":{"bendpoints":[]},"itp review":{"bendpoints":[]},"security review":{"bendpoints":[]},"admin review":{"bendpoints":[]}},"xy":[250,230]}]]></metadata>
        <transitions>
            <transition>
                <name>admin review</name>
                <target>admin review</target>
                <default>true</default>
            </transition>
            <transition>
                <name>security review</name>
                <target>security review</target>
                <default>true</default>
            </transition>
            <transition>
                <name>itp review</name>
                <target>itp review</target>
                <default>true</default>
            </transition>
            <transition>
                <name>controlling/finance review</name>
                <target>controlling/finance review</target>
                <default>true</default>
            </transition>
        </transitions>
    </fork>
    <join>
        <name>join</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[]}},"xy":[770,200]}]]></metadata>
        <transitions>
            <transition>
                <name>approve</name>
                <target>approved</target>
                <default>true</default>
            </transition>
        </transitions>
    </join>
    <task>
        <name>admin review</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[]},"join":{"bendpoints":[]}},"xy":[520,-10]}]]></metadata>
        <actions>
            <action>
                <name>approve</name>
                <script><![CDATA[WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.toStatus("expired"), workflowContext);]]></script>
                <script-language>groovy</script-language>
                <script-required-contexts>import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
						import com.liferay.portal.kernel.workflow.WorkflowConstants;</script-required-contexts>
                <execution-type>onExit</execution-type>
            </action>
        </actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role[] adminRoles = (Role[]) serviceContext.getAttribute("vgcapon_eOnboarding_admin");
				roles = new ArrayList<Role>();
				for(Role role : adminRoles) {
					roles.add(role);
				}
				user = null;
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>approve</name>
                <target>join</target>
                <default>true</default>
            </transition>
        </transitions>
    </task>
    <task>
        <name>itp review</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[]}},"xy":[520,310]}]]></metadata>
		<actions>
			<action>
				<name>approve</name>
				<script>
<![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
						import com.liferay.portal.kernel.workflow.WorkflowConstants;

						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.toStatus("inactive"), workflowContext);]]>
		</script>
				<script-language>groovy</script-language>
				<execution-type>onExit</execution-type>
			</action>
		</actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role[] itpRoles = (Role[]) serviceContext.getAttribute("vgcapon_eOnboarding_itp");
				roles = new ArrayList<Role>();
				for(Role role : itpRoles) {
					roles.add(role);
				}
				user = null;
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>approve</name>
                <target>join</target>
                <default>true</default>
            </transition>
        </transitions>
    </task>
    <task>
        <name>controlling/finance review</name>
        <metadata><![CDATA[{"transitions":{"approve":{"bendpoints":[]}},"xy":[520,510]}]]></metadata>
        <actions>
			<action>
				<name>approve</name>
				<script>
<![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
						import com.liferay.portal.kernel.workflow.WorkflowConstants;

						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.toStatus("incomplete"), workflowContext);]]>
		</script>
				<script-language>groovy</script-language>
				<execution-type>onExit</execution-type>
			</action>
		</actions>
        <assignments>
            <scripted-assignment>
                <script><![CDATA[
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portal.model.Role;
				
				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
				Role[] controllingFinanceRoles = (Role[]) serviceContext.getAttribute("vgcapon_eOnboarding_controlling_finance");
				roles = new ArrayList<Role>();
				for(Role role : controllingFinanceRoles) {
					roles.add(role);
				}
				user = null;
                ]]></script>
                <script-language>groovy</script-language>
            </scripted-assignment>
        </assignments>
        <transitions>
            <transition>
                <name>approve</name>
                <target>join</target>
                <default>true</default>
            </transition>
        </transitions>
    </task>
</workflow-definition>